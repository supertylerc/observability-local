---
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: tracing
  namespace: otel
spec:
  env:
    - name: GOMAXPROCS
      valueFrom:
        resourceFieldRef:
          resource: limits.cpu
    - name: GOMEMLIMIT
      valueFrom:
        resourceFieldRef:
          resource: limits.memory
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
  serviceAccount: "collector"
  mode: deployment
  resources:
    requests:
      cpu: 75m
      memory: 64Mi
    limits:
      cpu: 150m
      memory: 256Mi
  config:
    extensions:
      health_check:
        endpoint: ${env:MY_POD_IP}:13133
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: ${env:MY_POD_IP}:4317
          http:
            endpoint: ${env:MY_POD_IP}:4318
            cors:
              allowed_origins:
                - "http://*"
                - "https://*"
      httpcheck/frontendproxy:
        targets:
          - endpoint: 'http://otel-demo-frontendproxy.otel-demo.svc:8080'
      redis:
        endpoint: "valkey-cart.otel-demo.svc:6379"
        collection_interval: 10s
    processors:
      k8sattributes:
        extract:
          metadata:
            - k8s.namespace.name
            - k8s.deployment.name
            - k8s.statefulset.name
            - k8s.daemonset.name
            - k8s.cronjob.name
            - k8s.job.name
            - k8s.node.name
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.pod.start_time
        passthrough: false
        pod_association:
          - sources:
              - from: resource_attribute
                name: k8s.pod.ip
          - sources:
              - from: resource_attribute
                name: k8s.pod.uid
          - sources:
              - from: connection
      memory_limiter:
        check_interval: 5s
        limit_percentage: 80
        spike_limit_percentage: 25
      batch: {}
      # This processor is used to help limit high cardinality on next.js span names
      # When this PR is merged (and released) we can remove this transform processor
      # https://github.com/vercel/next.js/pull/64852
      transform/nextjs:
        error_mode: ignore
        trace_statements:
          - context: span
            statements:
              # could be removed when https://github.com/vercel/next.js/pull/64852 is fixed upstream
              - replace_pattern(name, "\\?.*", "")
              - replace_match(name, "GET /api/products/*", "GET /api/products/{productId}")
      resource/set_instance_id:
        attributes:
        - key: service.instance.id
          from_attribute: k8s.pod.uid
          action: insert
    connectors:
      spanmetrics: {}
    exporters:
      debug:
        verbosity: detailed
      otlp:
        endpoint: "tempo.tempo.svc:4317"
        tls:
          insecure: true
        compression: none
      otlphttp/prometheus:
        endpoint: 'http://otlp-prometheus.monitoring.svc:9090/api/v1/otlp'
        tls:
          insecure: true
      otlphttp/loki:
        endpoint: "http://loki-gateway.loki.svc:80/otlp"
    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, k8sattributes, batch, resource/set_instance_id, transform/nextjs]
          exporters: [otlp, spanmetrics]
        metrics:
          receivers: [httpcheck/frontendproxy, redis, otlp, spanmetrics]
          processors: [memory_limiter, k8sattributes, batch, resource/set_instance_id]
          exporters: [otlphttp/prometheus]
        logs:
          receivers: [otlp]
          processors: [memory_limiter, k8sattributes, batch, resource/set_instance_id]
          exporters: [otlphttp/loki]
