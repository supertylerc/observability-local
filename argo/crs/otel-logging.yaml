---
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: logging
  namespace: otel
spec:
  serviceAccount: "collector"
  mode: daemonset
  tolerations:
    - key: ""
      operator: Exists
      effect: ""
  volumeMounts:
    - mountPath: /var/log
      name: varlog
      readOnly: true
  volumes:
    - hostPath:
        path: /var/log
      name: varlog
  config:
    receivers:
      filelog/pod_logs:
        include_file_name: true
        include_file_path: true
        include:
          - /var/log/pods/**/*.log
        start_at: beginning
        operators:
          - id: container-parser
            type: container
    processors:
      memory_limiter:
        check_interval: 2s
        limit_percentage: 80
        spike_limit_percentage: 20
      k8sattributes:
        extract:
          labels:
            - from: pod
              key: app.kubernetes.io/name
              tag_name: service.name
            - from: pod
              key: k8s-app
              tag_name: service.name
            - from: pod
              key: app
              tag_name: service.name
            - from: pod
              key: app.kubernetes.io/instance
              tag_name: k8s.app.instance
            - from: pod
              key: app.kubernetes.io/version
              tag_name: service.version
            - from: pod
              key: app.kubernetes.io/component
              tag_name: k8s.app.component
          metadata:
            - k8s.namespace.name
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.node.name
            - k8s.pod.start_time
            - k8s.deployment.name
            - k8s.replicaset.name
            - k8s.replicaset.uid
            - k8s.daemonset.name
            - k8s.daemonset.uid
            - k8s.job.name
            - k8s.job.uid
            - k8s.container.name
            - k8s.cronjob.name
            - k8s.statefulset.name
            - k8s.statefulset.uid
            - container.image.tag
            - container.image.name
            - k8s.cluster.uid
        filter:
          node_from_env_var: K8S_NODE_NAME
        passthrough: false
        pod_association:
          - sources:
            - from: resource_attribute
              name: k8s.pod.uid
          - sources:
            - from: resource_attribute
              name: k8s.pod.name
            - from: resource_attribute
              name: k8s.namespace.name
            - from: resource_attribute
              name: k8s.node.name
          - sources:
            - from: resource_attribute
              name: k8s.pod.ip
          - sources:
            - from: resource_attribute
              name: k8s.pod.name
            - from: resource_attribute
              name: k8s.namespace.name
          - sources:
            - from: connection
      batch: {}
    exporters:
      debug:
        verbosity: detailed
      otlphttp/loki:
        endpoint: "http://loki-gateway.loki.svc:80/otlp"
    service:
      pipelines:
        logs:
          receivers: [filelog/pod_logs]
          processors: [memory_limiter,k8sattributes,batch]
          exporters: [otlphttp/loki]  
